package programmers_coding_test.chap2;

public class chap2 {
    public static void main(String[] args) {
        // 시간 복잡도 : 입력 크기와 실행 시간의 상관관계
        // 이진탐색 : O(logN)
        // 선형탐색 : O(N)
        // 정렬 :    O(NlogN)
        // 조합 :    O(2^n)
        // 순열 :    O(N!)

        // 시간 복잡도 계산 : 반복 횟수 세어보기

        // 제한 시간이 1초일 때 유추 가능한 시간 복잡도와 알고리즘
//        N = 10이면, 유추 가능한 시간 복잡도는 O(N!)이며, 유추 가능한 알고리즘은 "순열"이다.
//        N = 20이면, 유추 가능한 시간 복잡도는 O(2^N)이며, 유추 가능한 알고리즘은 "조합"이다.
//        N = 1,000~ 이면, 유추 가능한 시간 복잡도는 O(N^3) 또는 O(N^3 * logN)이며, 유추 가능한 알고리즘은 "완전 탐색, 이진 탐색"이다.
//        N = 10,000~ 이면, 유추 가능한 시간 복잡도는 O(N * logN)이며, 유추 가능한 알고리즘은 "정렬, 이진 탐색"이다.
    }
}
